{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Guialvesds/Desktop/Projetos/orion/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/user.service\";\nimport * as i4 from \"src/app/services/alert.service\";\nimport * as i5 from \"@angular/common\";\n\nfunction AccountComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"p\");\n    i0.ɵɵtext(2, \"Todos os campos s\\u00E3o obrigat\\u00F3rios.\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AccountComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"p\");\n    i0.ɵɵtext(2, \"Senhas n\\u00E3o conferem.\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let AccountComponent = /*#__PURE__*/(() => {\n  class AccountComponent {\n    constructor(formBuild, router, userServices, alert) {\n      this.formBuild = formBuild;\n      this.router = router;\n      this.userServices = userServices;\n      this.alert = alert;\n      this.users = [];\n      this.validation = false;\n      this.passValidation = false;\n    }\n\n    ngOnInit() {\n      this.formulario = this.formBuild.group({\n        name: [null],\n        email: [null],\n        password: [null],\n        rPassword: [null]\n      });\n    }\n\n    submit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.userServices.getUsers().subscribe(item => {\n          const data = item.data;\n          _this.users = data;\n        });\n\n        if (_this.formulario.value.name == null && _this.formulario.value.email == null && _this.formulario.value.password == null) {\n          _this.validation = true;\n          console.log('Todos os campos são obrigatórios!');\n        } else if (_this.formulario.value.password !== _this.formulario.value.rPassword) {\n          _this.passValidation = true;\n          console.log('Senhas não conferem!');\n        } else {\n          yield _this.userServices.creatUser(_this.formulario.value).subscribe();\n          console.log('Usuário cadastrado com sucesso!');\n\n          _this.alert.add(\"Usuário criado com sucesso!\");\n\n          setTimeout(() => {\n            _this.router.navigate(['/login']);\n          }, 2000);\n        }\n      })();\n    }\n\n  }\n\n  AccountComponent.ɵfac = function AccountComponent_Factory(t) {\n    return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.AlertService));\n  };\n\n  AccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AccountComponent,\n    selectors: [[\"app-account\"]],\n    decls: 21,\n    vars: 3,\n    consts: [[1, \"container\", 3, \"formGroup\", \"submit\"], [1, \"card\"], [1, \"inputs\"], [\"class\", \"validation\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"name\", \"placeholder\", \"Nome\", \"id\", \"nome\", \"formControlName\", \"name\", \"required\", \"\"], [\"type\", \"email\", \"name\", \"email\", \"placeholder\", \"E-mail\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\", \"email\", \"\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Senha\", \"id\", \"senha\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Confirmar Senha\", \"formControlName\", \"rPassword\", \"id\", \"confirmaSenha\"], [1, \"buttons\"], [\"type\", \"submit\"], [1, \"lorenLogin\"], [\"routerLink\", \"/login\"], [1, \"validation\"]],\n    template: function AccountComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function AccountComponent_Template_form_submit_0_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n        i0.ɵɵtext(4, \"Criar Conta\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, AccountComponent_div_5_Template, 3, 0, \"div\", 3);\n        i0.ɵɵelement(6, \"input\", 4)(7, \"input\", 5)(8, \"input\", 6)(9, \"input\", 7);\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵtemplate(11, AccountComponent_div_11_Template, 3, 0, \"div\", 3);\n        i0.ɵɵelementStart(12, \"button\", 9);\n        i0.ɵɵtext(13, \"Cadastrar\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"h2\");\n        i0.ɵɵtext(16, \"Junte-se a Orion!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\");\n        i0.ɵɵtext(18, \" Se j\\u00E1 possui conta por aqui, basta acessar a sua conta \");\n        i0.ɵɵelementStart(19, \"a\", 11);\n        i0.ɵɵtext(20, \"Clicando aqui.\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.formulario);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.validation);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.passValidation);\n      }\n    },\n    dependencies: [i5.NgIf, i2.RouterLinkWithHref, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.EmailValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;min-width:80vw;min-height:100vh}.card[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;width:60vw;height:75vh;box-shadow:0 8px 10px #52525252;border-radius:10px}.lorenLogin[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;width:40%;height:100%;text-align:center;background-color:#38b0b4;color:#fff;border-radius:0 10px 10px 0;letter-spacing:1px}.lorenLogin[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-bottom:60px;letter-spacing:2px}.lorenLogin[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{color:#ff0}.lorenLogin[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover{color:#a9cad6}.inputs[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;width:60%;height:100%;background-color:#fff;border-radius:10px 0 0 10px}.inputs[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-top:-30px;margin-bottom:30px;color:#38b0b4;font-size:2.5em}.inputs[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:.7em;color:#727272}.inputs[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{background-color:#bebebe52;width:50%;height:7.5%;padding-left:9px;border:0;margin:6px;outline:0}.buttons[_ngcontent-%COMP%]{display:flex;justify-content:center;flex-direction:column;align-items:center;margin-top:10px}.buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:150px;height:32px;background-color:#38b0b4;border:none;color:#fff;letter-spacing:1.5px;font-size:.9em;font-weight:700}.validation[_ngcontent-%COMP%]{border-left:solid 2.5px red;margin:3px}.validation[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:red;margin-left:5px}.ng-invalid.ng-touched[_ngcontent-%COMP%]:not(form){border:solid 1px red}\"]\n  });\n  return AccountComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}